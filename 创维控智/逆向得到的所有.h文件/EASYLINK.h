//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSNetServiceBrowserDelegate.h"
#import "NSNetServiceDelegate.h"

@class AsyncSocket, AsyncUdpSocket, NSDictionary, NSMutableArray, NSNetServiceBrowser, NSString, NSTimer, Reachability;

@interface EASYLINK : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate>
{
    unsigned long long _broadcastcount;
    unsigned long long _multicastCount;
    _Bool _broadcastSending;
    _Bool _multicastSending;
    _Bool _softAPSending;
    _Bool _wlanUnConfigured;
    int _mode;
    NSMutableArray *multicastArray;
    NSMutableArray *broadcastArray;
    AsyncUdpSocket *multicastSocket;
    AsyncUdpSocket *broadcastSocket;
    AsyncSocket *ftcServerSocket;
    NSMutableArray *ftcClients;
    NSTimer *closeFTCClientTimer;
    NSNetServiceBrowser *_netServiceBrowser;
    NSMutableArray *_netServiceArray;
    NSDictionary *_configDict;
    struct __CFHTTPMessage *inComingMessageArray[100];
    Reachability *wifiReachability;
    int _softAPStage;
    id theDelegate;
    float easyLinkPlusDelayPerByte;
    float easyLinkPlusDelayPerBlock;
    float easyLinkV2DelayPerBlock;
}

+ (id)getGatewayAddress;
+ (id)getBroadcastAddress;
+ (id)getNetMask;
+ (id)getIPAddress;
+ (id)infoForConnectedNetwork;
+ (id)ssidDataForConnectedNetwork;
+ (id)ssidForConnectedNetwork;
@property(nonatomic) float easyLinkV2DelayPerBlock; // @synthesize easyLinkV2DelayPerBlock;
@property(nonatomic) float easyLinkPlusDelayPerBlock; // @synthesize easyLinkPlusDelayPerBlock;
@property(nonatomic) float easyLinkPlusDelayPerByte; // @synthesize easyLinkPlusDelayPerByte;
@property(readonly, nonatomic) int mode; // @synthesize mode=_mode;
@property(readonly, nonatomic) _Bool softAPSending; // @synthesize softAPSending=_softAPSending;
@property(readonly, nonatomic) int softAPStage; // @synthesize softAPStage=_softAPStage;
- (void).cxx_destruct;
- (void)wifiStatusChanged:(id)arg1;
- (void)appEnterInBackground:(id)arg1;
- (void)appEnterInforground:(id)arg1;
- (void)closeClient:(id)arg1;
- (void)onSocket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)onSocket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)onSocketDidDisconnect:(id)arg1;
- (void)onSocket:(id)arg1 willDisconnectWithError:(id)arg2;
- (void)onSocket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)onSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)otaFTCClient:(id)arg1 withOTAData:(id)arg2;
- (void)configFTCClient:(id)arg1 withConfiguration:(id)arg2;
- (void)closeFTCClient:(id)arg1;
- (void)netServiceDidResolveAddress:(id)arg1;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(_Bool)arg3;
- (void)multicastStartConfigure:(id)arg1;
- (void)broadcastStartConfigure:(id)arg1;
- (void)stopTransmitting;
- (void)transmitSettings;
- (void)prepareEasyLinkPlus:(id)arg1 password:(id)arg2 info:(id)arg3;
- (void)prepareEasyLinkV2:(id)arg1 password:(id)arg2 info:(id)arg3;
- (void)prepareEasyLink_withFTC:(id)arg1 info:(id)arg2 mode:(int)arg3;
- (_Bool)isFTCServerStarted;
- (void)closeFTCServer;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void)unInit;
- (id)initWithDelegate:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

