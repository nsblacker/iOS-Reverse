//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "BaseAudioPlayer.h"

@class NSTimer;

@interface LocalAudioPlayer : BaseAudioPlayer
{
    struct AudioStreamPacketDescription *packetDescs;
    NSTimer *_getProgressTimer;
    unsigned int _durationTime;
    struct OpaqueAudioFileID *audioFile;
    struct OpaqueAudioQueue *audioQueue;
    struct AudioQueueBuffer *buffers[16];
    struct AudioStreamBasicDescription dataFormat;
    unsigned long numPacketsToRead;
    unsigned long long packetIndex;
    double sampleRate;
    int playStatus;
    float volume;
    double seekTime;
    NSTimer *timer;
    BOOL hasRequirePlayNetSong;
    unsigned long bitRate;
    int errorCode;
    long err;
    struct __CFReadStream *stream;
    struct OpaqueAudioFileStreamID *audioFileStream;
    struct _opaque_pthread_mutex_t queueBuffersMutex;
    struct _opaque_pthread_cond_t queueBufferReadyCondition;
    _Bool inuse[3];
    unsigned long bytesFilled;
    unsigned long packetsFilled;
    _Bool seekNeeded;
    int buffersUsed;
    unsigned int fillBufferIndex;
    int playStaus;
}

- (void)setPlayStatus:(int)arg1;
- (BOOL)isFinishing;
- (unsigned int)getDuration;
- (int)stop;
- (int)resume;
- (int)pause;
- (void)onTimer:(id)arg1;
- (int)play:(id)arg1;
- (id)init;
- (unsigned long)readPacketsIntoBuffer:(struct AudioQueueBuffer *)arg1;
- (void)postTrackFinishedPlayingNotification:(id)arg1;
- (void)callbackForBuffer:(struct AudioQueueBuffer *)arg1;
- (void)handleInterruptionChangeToState:(unsigned long)arg1;
- (void)playBackIsRunningStateChanged;

@end

